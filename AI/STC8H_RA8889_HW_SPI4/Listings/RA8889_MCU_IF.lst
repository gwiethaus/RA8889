C51 COMPILER V9.55   RA8889_MCU_IF                                                         07/15/2024 22:22:17 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE RA8889_MCU_IF
OBJECT MODULE PLACED IN .\Objects\RA8889_MCU_IF.obj
COMPILER INVOKED BY: D:\Program Files\Keil_v5\C51\BIN\C51.EXE RA8889_01_Kernel\RA8889_MCU_IF.c COMPACT OMF2 ROM(COMPACT)
                    - OPTIMIZE(9,SPEED) BROWSE INCDIR(.\RA8889_01_Kernel) DEBUG PRINT(.\Listings\RA8889_MCU_IF.lst) TABS(2) OBJECT(.\Objects\
                    -RA8889_MCU_IF.obj)

line level    source

   1          #include "RA8889_MCU_IF.h"
   2          #include "stc8h.h"       //包含此头文件后，不需要再包含"reg51.h"头文件
   3          
   4          
   5          /*********************************************************/
   6          /*  SPI-4 通信协议：硬件方式                             */
   7          /*********************************************************/
   8          
   9          /* SPI-4 初始化 */
  10          void SPI4_Init()
  11          {
  12   1        SPCTL |=  (1 << 7); //忽略 SS 引脚功能，使用 MSTR 确定器件是主机还是从机
  13   1        SPCTL |=  (1 << 6); //使能 SPI 功能
  14   1        SPCTL &= ~(1 << 5); //先发送/接收数据的高位（ MSB）
  15   1        SPCTL |=  (1 << 4); //设置主机模式
  16   1        SPCTL |=  (1 << 3); //SCLK 空闲时为高电平，SCLK 的前时钟沿为下降沿，后时钟沿为上升沿
  17   1        SPCTL |=  (1 << 2); //数据在 SCLK 的前时钟沿驱动，后时钟沿采样
  18   1        SPCTL = (SPCTL & ~3) | 2;   //SPI 时钟频率选择, 0: 4T, 1: 8T,  2: 16T,  3: 2T  （时钟频率先调整到最慢，再
             -依照自己的系统调整）
  19   1        
  20   1        P_SW1 = (P_SW1 & ~(3<<2)) | (1<<2);     //IO口选择P2. 0：P1.2/P5.4 P1.3 P1.4 P1.5  ||  1：P2.2 P2.3 P2.4 
             -P2.5  ||  2：P5.4 P4.0 P4.1 P4.3  ||  3：P3.5 P3.4 P3.3 P3.2
  21   1      
  22   1        SPSTAT = SPIF + WCOL;   //清0 SPIF和WCOL标志  
  23   1      }
  24          
  25          /* SPI-4 发送数据 */
  26          void SPI4_SendByte(unsigned char dat)
  27          {
  28   1        SPDAT = dat;
  29   1        while((SPSTAT & SPIF) == 0) ;
  30   1        SPSTAT = SPIF + WCOL;   //清0 SPIF和WCOL标志
  31   1      }
  32          
  33          /* SPI-4 接收数据 */
  34          unsigned char SPI4_ReceiveByte()
  35          {
  36   1        SPDAT = 0xff;
  37   1        while((SPSTAT & SPIF) == 0) ;
  38   1        SPSTAT = SPIF + WCOL;   //清0 SPIF和WCOL标志
  39   1        return (SPDAT);
  40   1      }
  41          
  42          
  43          
  44          /* LCD API: 写入命令 */
  45          void LCD_CmdWrite(unsigned char cmd)
  46          {
  47   1        SPI_SS=0;
  48   1        SPI4_SendByte(0x00);
  49   1        SPI4_SendByte(cmd);
  50   1        SPI_SS=1;
  51   1      }
C51 COMPILER V9.55   RA8889_MCU_IF                                                         07/15/2024 22:22:17 PAGE 2   

  52          
  53          /* LCD API: 写入数据 */
  54          void LCD_DataWrite(unsigned char Data)
  55          {
  56   1        SPI_SS=0;
  57   1        SPI4_SendByte(0x80);
  58   1        SPI4_SendByte(Data);
  59   1        SPI_SS=1;
  60   1      }
  61          
  62          /* LCD API: 读取数据 */
  63          unsigned char LCD_DataRead(void)
  64          {
  65   1        unsigned char Data;
  66   1        
  67   1        SPI_SS=0;
  68   1        SPI4_SendByte(0xc0);
  69   1        Data = SPI4_ReceiveByte();
  70   1        SPI_SS=1;
  71   1        return Data;
  72   1      }
  73          
  74          /* LCD API: 读取芯片状态 */
  75          unsigned char LCD_StatusRead(void)
  76          {
  77   1        unsigned char Data;
  78   1        
  79   1        SPI_SS=0;
  80   1        SPI4_SendByte(0x40);
  81   1        Data = SPI4_ReceiveByte();
  82   1        SPI_SS=1;
  83   1        return Data;
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    120    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
